{
	"id": 0,
	"name": "hsNode",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"cpUtil\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/node/hsNode/src/cpUtil.ts",
			"children": [
				{
					"id": 2,
					"name": "cp",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "cpUtil.ts",
							"line": 1,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require('child_process')"
				},
				{
					"id": 3,
					"name": "exec",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 4,
							"name": "exec",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "promise to provide the stdout and stderr streams form the child process.\n",
								"tags": [
									{
										"tag": "ngdoc",
										"text": "object"
									},
									{
										"tag": "name",
										"text": "exec"
									},
									{
										"tag": "methodof",
										"text": "hsNode.cpUtil"
									},
									{
										"tag": "description",
										"text": "executes `command` in a child process and promises to return the stdout and stderr streams.\n<pre>\nlet utils = require('./cpUtils');\nutils.exec(cmd)\n.then((stdout, stderr) => {...})\n.catch(err => {...});\n</pre>"
									}
								]
							},
							"parameters": [
								{
									"id": 5,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the shell command to execute"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the options to pass along to the shell"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 7,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 9,
													"name": "stderr",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "cpUtil.ts",
															"line": 30,
															"character": 62
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8,
													"name": "stdout",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "cpUtil.ts",
															"line": 30,
															"character": 47
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														9,
														8
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "cpUtil.ts",
							"line": 29,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "cpUtil.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 10,
			"name": "\"fsUtil\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/node/hsNode/src/fsUtil.ts",
			"children": [
				{
					"id": 11,
					"name": "Stats",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Convenience functions for file system access, wrapped in Promises.\n- &nbsp;{@link hsNode.fsUtil#methods_realPath realPath}\n- &nbsp;{@link hsNode.fsUtil#methods_pathExists pathExists}\n- &nbsp;{@link hsNode.fsUtil#methods_isfile isFile}\n- &nbsp;{@link hsNode.fsUtil#methods_isdirectory isDirectory}\n- &nbsp;{@link hsNode.fsUtil#methods_readDir readDir}\n- &nbsp;{@link hsNode.fsUtil#methods_readFile readFile}\n- &nbsp;{@link hsNode.fsUtil#methods_readTextFile readTextFile}\n- &nbsp;{@link hsNode.fsUtil#methods_readJsonFile readJsonFile}\n- &nbsp;{@link hsNode.fsUtil#methods_writeFile writeFile}\n- &nbsp;{@link hsNode.fsUtil#methods_writeTextFile writeTextFile}\n- &nbsp;{@link hsNode.fsUtil#methods_writeJsonFile writeJsonFile}\n- &nbsp;{@link hsNode.fsUtil#methods_appendFile appendFile}\n- &nbsp;{@link hsNode.fsUtil#methods_remove remove}"
					},
					"children": [
						{
							"id": 23,
							"name": "accessTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 21,
							"name": "blockSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 32,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 13,
							"name": "device",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 24,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 19,
							"name": "deviceID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 30,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18,
							"name": "groupID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 29,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14,
							"name": "iNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 25,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 24,
							"name": "modifyTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 35,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 22,
							"name": "numBlocks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 16,
							"name": "numLinks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 27,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 12,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 25,
							"name": "statusChangeTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 36,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20,
							"name": "totalSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 31,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 17,
							"name": "userID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "fsUtil.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								23,
								21,
								13,
								19,
								18,
								14,
								24,
								22,
								16,
								12,
								25,
								20,
								15,
								17
							]
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 22,
							"character": 23
						}
					]
				},
				{
					"id": 26,
					"name": "fs",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 1,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require('fs')"
				},
				{
					"id": 84,
					"name": "appendFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 85,
							"name": "appendFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "appends to a file either as binary or text and promises to return the file name.",
								"returns": "promise to provide the realPath of the file written to.\n"
							},
							"parameters": [
								{
									"id": 86,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to write to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 87,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the content to write"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 88,
									"name": "isText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "`true`|`false` if file should be read as `utf8`|binary"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 291,
							"character": 26
						}
					]
				},
				{
					"id": 33,
					"name": "error",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 34,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 35,
									"name": "err",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 70,
							"character": 14
						}
					]
				},
				{
					"id": 45,
					"name": "isDirectory",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 46,
							"name": "isDirectory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "determines if `thePath` is a directory and promises to provide `true` or `false`.",
								"returns": "promise to provide `true` or `false`\n"
							},
							"parameters": [
								{
									"id": 47,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 117,
							"character": 27
						}
					]
				},
				{
					"id": 42,
					"name": "isFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 43,
							"name": "isFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "determines if `thePath` is a file and promises to provide `true` or `false`.",
								"returns": "promise to provide `true` or `false`\n"
							},
							"parameters": [
								{
									"id": 44,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 106,
							"character": 22
						}
					]
				},
				{
					"id": 48,
					"name": "isLink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 49,
							"name": "isLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "determines if `thePath` is a directory and promises to provide `true` or `false`.",
								"returns": "promise to provide `true` or `false`\n"
							},
							"parameters": [
								{
									"id": 50,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 128,
							"character": 22
						}
					]
				},
				{
					"id": 30,
					"name": "lstat",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 31,
							"name": "lstat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 32,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 56,
							"character": 14
						}
					]
				},
				{
					"id": 51,
					"name": "mkdirs",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 52,
							"name": "mkdirs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates any missing directories in `thePath` and promises to return the path name.\nCharacters after the last `/` in `thePath` will be interpreted as a filename, hence no directory willbe created form them.\nTerminate `thePath` with a final `/` to indicate that all parts should be created.\nFInally, for precaution `mkdirs` only creates directories within the current working directory.",
								"returns": "promise to provide the path name\n"
							},
							"parameters": [
								{
									"id": 53,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 142,
							"character": 22
						}
					]
				},
				{
					"id": 39,
					"name": "pathExists",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 40,
							"name": "pathExists",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "determines if `thePath` exists and promises to provide `true` or `false`.",
								"returns": "promise to provide `true` or `false`\n"
							},
							"parameters": [
								{
									"id": 41,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 95,
							"character": 26
						}
					]
				},
				{
					"id": 54,
					"name": "readDir",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 55,
							"name": "readDir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "lists all files in a directory and promises to provide the list.",
								"returns": "promise to provide a list of directory entries.\n"
							},
							"parameters": [
								{
									"id": 56,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 173,
							"character": 23
						}
					]
				},
				{
					"id": 57,
					"name": "readFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 58,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "reads a file either as binary or text and promises to provide the content.",
								"returns": "promise to provide file content.\n"
							},
							"parameters": [
								{
									"id": 59,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to read"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60,
									"name": "isText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "`true`|`false` if file should be read as `utf8`|binary"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 195,
							"character": 24
						}
					]
				},
				{
					"id": 64,
					"name": "readJsonFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 65,
							"name": "readJsonFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "reads a text file and promises to provide the content.",
								"returns": "promise to provide file content.\n"
							},
							"parameters": [
								{
									"id": 66,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to read"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 221,
							"character": 28
						}
					]
				},
				{
					"id": 61,
					"name": "readTextFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 62,
							"name": "readTextFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "reads a text file and promises to provide the content.",
								"returns": "promise to provide file content.\n"
							},
							"parameters": [
								{
									"id": 63,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to read"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 211,
							"character": 28
						}
					]
				},
				{
					"id": 36,
					"name": "realPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 37,
							"name": "realPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "determines the canonical path for `thePath`, resolving all symbolic links and '../'in the path.",
								"returns": "promise to provide the real canonical system path.\n"
							},
							"parameters": [
								{
									"id": 38,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 83,
							"character": 24
						}
					]
				},
				{
					"id": 89,
					"name": "remove",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 90,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "promises to delete a file or folder and return the file or folder name.",
								"returns": "promise to provide the name of the removed file.\n"
							},
							"parameters": [
								{
									"id": 91,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to write"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 305,
							"character": 22
						}
					]
				},
				{
					"id": 27,
					"name": "stat",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 28,
							"name": "stat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 29,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Stats",
										"id": 11
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 42,
							"character": 13
						}
					]
				},
				{
					"id": 67,
					"name": "writeFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 68,
							"name": "writeFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "writes a file either as binary or text and promises to return the file name.",
								"returns": "promise to provide the file name if successful.\n"
							},
							"parameters": [
								{
									"id": 69,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to write to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 70,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the content to write"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 71,
									"name": "isText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "`true`|`false` if file should be read as `utf8`|binary"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 234,
							"character": 25
						}
					]
				},
				{
					"id": 80,
					"name": "writeJsonFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 81,
							"name": "writeJsonFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "writes a text file and promises to return the file name.",
								"returns": "promise to provide the file name if successful.\n"
							},
							"parameters": [
								{
									"id": 82,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to write"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 83,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the object to write"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 277,
							"character": 29
						}
					]
				},
				{
					"id": 72,
					"name": "writeStream",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 73,
							"name": "writeStream",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "writes content to a file as a stream and promises to return the file name.",
								"returns": "promise to provide the file name if successful.\n"
							},
							"parameters": [
								{
									"id": 74,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to write to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 75,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the content to write"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 251,
							"character": 27
						}
					]
				},
				{
					"id": 76,
					"name": "writeTextFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 77,
							"name": "writeTextFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "writes a text file and promises to return the file name.",
								"returns": "promise to provide the file name if successful.\n"
							},
							"parameters": [
								{
									"id": 78,
									"name": "thePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to write"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 79,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "fsUtil.ts",
							"line": 266,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						11
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						26
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						84,
						33,
						45,
						42,
						48,
						30,
						51,
						39,
						54,
						57,
						64,
						61,
						36,
						89,
						27,
						67,
						80,
						72,
						76
					]
				}
			],
			"sources": [
				{
					"fileName": "fsUtil.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 157,
			"name": "\"httpUtil\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/node/hsNode/src/httpUtil.ts",
			"comment": {
				"shortText": "Convenience functions for http access, wrapped in Promises.\n- {@link hsNode.httpUtil#methods_request request}"
			},
			"children": [
				{
					"id": 182,
					"name": "Digest",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 186,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 187,
									"name": "new Digest",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 188,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Digest",
										"id": 182
									}
								}
							],
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 37,
									"character": 20
								}
							]
						},
						{
							"id": 183,
							"name": "nc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 35,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 185,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 37,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 184,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 36,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 192,
							"name": "generateCNONCE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 193,
									"name": "generateCNONCE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse challenge digest"
									},
									"parameters": [
										{
											"id": 194,
											"name": "qop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 195,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 196,
													"name": "cnonce",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "httpUtil.ts",
															"line": 69,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " cnonce"
												},
												{
													"id": 197,
													"name": "nc",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "httpUtil.ts",
															"line": 69,
															"character": 34
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": " nc"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														196,
														197
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 59,
									"character": 18
								}
							]
						},
						{
							"id": 198,
							"name": "testDigestAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 199,
									"name": "testDigestAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 200,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 201,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 202,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IncomingMessage",
												"id": 158
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HttpResponse",
														"id": 178
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 78,
									"character": 18
								}
							]
						},
						{
							"id": 190,
							"name": "updateNC",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 191,
									"name": "updateNC",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update and zero pad nc"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 47,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								186
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								183,
								185,
								184
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								192,
								198,
								190
							]
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 34,
							"character": 19
						}
					]
				},
				{
					"id": 178,
					"name": "HttpResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 181,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 180,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 30,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 179,
							"name": "response",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								181,
								180,
								179
							]
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 28,
							"character": 29
						}
					]
				},
				{
					"id": 158,
					"name": "IncomingMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 177,
							"name": "_headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 176,
							"name": "caseless",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 25,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 159,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 160,
							"name": "httpVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 16,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 161,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 171,
							"name": "on",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 24,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 172,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 173,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 174,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 175,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "httpUtil.ts",
											"line": 24,
											"character": 7
										}
									]
								}
							}
						},
						{
							"id": 162,
							"name": "rawHeaders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 18,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 163,
							"name": "rawTrailers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 19,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 167,
							"name": "setEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 23,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 168,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 169,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 170,
													"name": "enc",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "httpUtil.ts",
											"line": 23,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 164,
							"name": "statusCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 20,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 165,
							"name": "statusMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 21,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 166,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "httpUtil.ts",
									"line": 22,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								177,
								176,
								159,
								160,
								161,
								171,
								162,
								163,
								167,
								164,
								165,
								166
							]
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 14,
							"character": 32
						}
					]
				},
				{
					"id": 203,
					"name": "http",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "  require('http')"
				},
				{
					"id": 204,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 10,
							"character": 45
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " Log('httpUtil')"
				},
				{
					"id": 209,
					"name": "compileParams",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 210,
							"name": "compileParams",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compose authorization header"
							},
							"parameters": [
								{
									"id": 211,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 133,
							"character": 22
						}
					]
				},
				{
					"id": 222,
					"name": "getAttributes",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 223,
							"name": "getAttributes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 224,
									"name": "tag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 225,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 173,
							"character": 22
						}
					]
				},
				{
					"id": 219,
					"name": "isBinary",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 220,
							"name": "isBinary",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 221,
									"name": "contentType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 162,
							"character": 17
						}
					]
				},
				{
					"id": 205,
					"name": "omitNull",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 206,
							"name": "omitNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 207,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 208,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 117,
							"character": 17
						}
					]
				},
				{
					"id": 215,
					"name": "parseDigestResponse",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 216,
							"name": "parseDigestResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 217,
									"name": "digestHeader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 218,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 152,
							"character": 28
						}
					]
				},
				{
					"id": 212,
					"name": "putDoubleQuotes",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 213,
							"name": "putDoubleQuotes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "return `true` if double quotes are needed for `entry`"
							},
							"parameters": [
								{
									"id": 214,
									"name": "entry",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 148,
							"character": 24
						}
					]
				},
				{
					"id": 226,
					"name": "request",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 227,
							"name": "request",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "sends a http get request and promises to return the result.",
								"returns": "promise to provide the result of the request.\n"
							},
							"parameters": [
								{
									"id": 228,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the URL to pass along to the GET or POST request"
									},
									"type": {
										"type": "reference",
										"name": "URL"
									}
								},
								{
									"id": 229,
									"name": "user",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "an optional user {@link Digest Digest}"
									},
									"type": {
										"type": "reference",
										"name": "Digest",
										"id": 182
									}
								},
								{
									"id": 230,
									"name": "referer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 231,
									"name": "postData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "optional data to post. If provided, a POST request will be sent instead of the default GET"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HttpResponse",
												"id": 178
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 199,
							"character": 23
						}
					]
				},
				{
					"id": 232,
					"name": "requestOptions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 233,
							"name": "requestOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 234,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 235,
									"name": "user",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Digest",
										"id": 182
									}
								},
								{
									"id": 236,
									"name": "postData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HttpResponse",
												"id": 178
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 214,
							"character": 23
						}
					]
				},
				{
					"id": 237,
					"name": "xml2json",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 238,
							"name": "xml2json",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Decodes an xm or html string into a JSON representation"
							},
							"parameters": [
								{
									"id": 239,
									"name": "xml",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "httpUtil.ts",
							"line": 248,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						182
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						178,
						158
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						203,
						204
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						209,
						222,
						219,
						205,
						215,
						212,
						226,
						232,
						237
					]
				}
			],
			"sources": [
				{
					"fileName": "httpUtil.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 240,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/node/hsNode/src/index.ts",
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 92,
			"name": "\"log\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/node/hsNode/src/log.ts",
			"comment": {
				"shortText": "Logging convenience functions.\n## Usage",
				"text": "### Using the global log object\nSettings in `log` are shared across modules\n<pre>\nimport { log } from 'hsnode';\nlog.info('by the way:'); // -> 20160817 09:59:08.032 info by the way:\nlog.error('oh dear!');   // -> 20160817 09:59:08.045 error *** oh dear!\n</pre>\n\n### Using a local log object\nSettings in `log` remain local to the module\n<pre>\nimport { Log } from 'hsnode'; const log = Log('myModule')\nlog.info('by the way:'); // -> 20160817 09:59:08.032 myModule info by the way:\nlog.error('oh dear!');   // -> 20160817 09:59:08.045 myModule error *** oh dear!\n</pre>\n\n### Using the `format` template:\n<pre>\nlog.format('%MMM %DD %hh%mm%ss');\nlog.info('by the way:');  // -> Aug 17 095908 info by the way:\nlog.error('oh dear!');    // -> Aug 17 095908 error *** oh dear!\n</pre>\n\n### Change the module prefix:\n<pre>\nlog.prefix('Main');\nlog.format('%hh%mm%ss');\nlog.info('by the way:');  // -> 09:59:08.032 Main info by the way:\nlog.error('oh dear!');    // -> 09:59:08.045 Main error *** oh dear!\n</pre>\n\n### Using a log file\n<pre>\nlog.format('%MM%DD');\nlog.info('by the way:'); // -> 0817 info by the way:\nlog.logFile('l%YY%MM');  // -> 0817 info now logging to file l1608.txt\nlog.logFile(null);       // -> 0817 disabling logfile\nlog.error('oh dear!');   // -> 0817 error *** oh dear!\n</pre>\n\n### Setting the Log level locally for the module\n```\nlog.level(log.WARN);\nlog.info('this will not be reported');\n```\n\n### Setting the Log level globally\nWill be used if no local level is set\n```\nlog.level(log.WARN, true);               // set global log level\nlog.info('this will be reported');       // because local level defaults to INFORM\nlog.level(null);                         // unset the local level\nlog.info('this will not be reported');   // because no local level is defined and global level is set to WARN\n```\n\n### log.inspect utility\nprovided as a shortcut to Node's [`util.inspect`](https://nodejs.org/dist/latest-v8.x/docs/api/util.html#util_util_inspect_object_options)\nfunction.\n```\nlog.info(log.inspect(myObj, null));      // prints the structure to inifinite depth\n```\n\n## Reporting Levels:\n- &nbsp; {@link log.DEBUG log.DEBUG}\n- &nbsp; {@link log.INFO  log.INFO}\n- &nbsp; {@link log.WARN  log.WARN}\n- &nbsp; {@link log.ERROR log.ERROR}\n\n## Reporting methods\n- &nbsp; {@link log.debug log.debug()}\n- &nbsp; {@link log.info  log.info()}\n- &nbsp; {@link log.warn  log.warn()}\n- &nbsp; {@link log.error log.error()}\n\n## Configurations:\n- &nbsp; {@link log.Log.level   log.level()}\n- &nbsp; {@link log.Log.format  log.format()}\n- &nbsp; {@link log.Log.prefix  log.prefix()}\n- &nbsp; {@link log.Log.logFile log.logFile()}\n"
			},
			"children": [
				{
					"id": 93,
					"name": "LevelDesc",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Type definition for level descriptors"
					},
					"children": [
						{
							"id": 96,
							"name": "desc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 107,
									"character": 57
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 94,
							"name": "importance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 107,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 95,
							"name": "sym",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 107,
									"character": 44
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								96,
								94,
								95
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 107,
							"character": 19
						}
					]
				},
				{
					"id": 97,
					"name": "DEBUG",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Debug reporting level with importance 0"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 93,
							"character": 11
						}
					],
					"type": {
						"type": "unknown",
						"name": "unique symbol"
					},
					"defaultValue": " Symbol('DEBUG')"
				},
				{
					"id": 100,
					"name": "ERROR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Warning reporting level with importance 3"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 102,
							"character": 11
						}
					],
					"type": {
						"type": "unknown",
						"name": "unique symbol"
					},
					"defaultValue": " Symbol('ERROR')"
				},
				{
					"id": 98,
					"name": "INFO",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Info reporting level with importance 1"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 96,
							"character": 10
						}
					],
					"type": {
						"type": "unknown",
						"name": "unique symbol"
					},
					"defaultValue": " Symbol('INFO')"
				},
				{
					"id": 99,
					"name": "WARN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Info reporting level with importance 2"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 99,
							"character": 10
						}
					],
					"type": {
						"type": "unknown",
						"name": "unique symbol"
					},
					"defaultValue": " Symbol('WARN')"
				},
				{
					"id": 107,
					"name": "defDateFormat",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "current date format string. See [date module]('_date_.html')"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 121,
							"character": 19
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "%YYYY%MM%DD %hh:%mm:%ss.%jjj"
					},
					"defaultValue": "\"%YYYY%MM%DD %hh:%mm:%ss.%jjj\""
				},
				{
					"id": 110,
					"name": "gColors",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"comment": {
						"shortText": "boolean determining if log will be printed in color"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 128,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 108,
					"name": "gDateFormat",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 122,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": " defDateFormat"
				},
				{
					"id": 106,
					"name": "gGlobalLevel",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"comment": {
						"shortText": "current reporting level, same across all modules"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 118,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "LevelDesc",
						"id": 93
					},
					"defaultValue": " gLevels[INFO]"
				},
				{
					"id": 109,
					"name": "gLogFile",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"comment": {
						"shortText": "name of the current log file, or undefined"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 125,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 118,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "the global log object"
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 141,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " create('')"
				},
				{
					"id": 119,
					"name": "Log",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "returns a local log object"
					},
					"signatures": [
						{
							"id": 120,
							"name": "Log",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "returns a local log object"
							},
							"parameters": [
								{
									"id": 121,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 122,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 123,
											"name": "DEBUG",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 364,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": "      DEBUG"
										},
										{
											"id": 126,
											"name": "ERROR",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 367,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": "      ERROR"
										},
										{
											"id": 124,
											"name": "INFO",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 365,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": "       INFO"
										},
										{
											"id": 125,
											"name": "WARN",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 366,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": "       WARN"
										},
										{
											"id": 136,
											"name": "config",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 377,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "config"
											},
											"defaultValue": "     config"
										},
										{
											"id": 128,
											"name": "debug",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 369,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "debug"
											},
											"defaultValue": "      debug"
										},
										{
											"id": 131,
											"name": "error",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 372,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "error"
											},
											"defaultValue": "      error"
										},
										{
											"id": 132,
											"name": "format",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 373,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "format"
											},
											"defaultValue": "     format"
										},
										{
											"id": 129,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 370,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "info"
											},
											"defaultValue": "       info"
										},
										{
											"id": 137,
											"name": "inspect",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 378,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "inspect"
											},
											"defaultValue": "    inspect"
										},
										{
											"id": 127,
											"name": "level",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 368,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "level"
											},
											"defaultValue": "      level"
										},
										{
											"id": 134,
											"name": "logFile",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 375,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "logFile"
											},
											"defaultValue": "    logFile"
										},
										{
											"id": 135,
											"name": "out",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 376,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "out"
											},
											"defaultValue": "        out"
										},
										{
											"id": 133,
											"name": "prefix",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 374,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "prefix"
											},
											"defaultValue": "     prefix"
										},
										{
											"id": 130,
											"name": "warn",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 371,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "warn"
											},
											"defaultValue": "       warn"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												123,
												126,
												124,
												125,
												136,
												128,
												131,
												132,
												129,
												137,
												127,
												134,
												135,
												133,
												130
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 144,
							"character": 16
						}
					]
				},
				{
					"id": 138,
					"name": "create",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 139,
							"name": "create",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 140,
									"name": "_prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 141,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 142,
											"name": "DEBUG",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 364,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": "      DEBUG"
										},
										{
											"id": 145,
											"name": "ERROR",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 367,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": "      ERROR"
										},
										{
											"id": 143,
											"name": "INFO",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 365,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": "       INFO"
										},
										{
											"id": 144,
											"name": "WARN",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 366,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": "       WARN"
										},
										{
											"id": 155,
											"name": "config",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 377,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "config"
											},
											"defaultValue": "     config"
										},
										{
											"id": 147,
											"name": "debug",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 369,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "debug"
											},
											"defaultValue": "      debug"
										},
										{
											"id": 150,
											"name": "error",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 372,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "error"
											},
											"defaultValue": "      error"
										},
										{
											"id": 151,
											"name": "format",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 373,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "format"
											},
											"defaultValue": "     format"
										},
										{
											"id": 148,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 370,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "info"
											},
											"defaultValue": "       info"
										},
										{
											"id": 156,
											"name": "inspect",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 378,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "inspect"
											},
											"defaultValue": "    inspect"
										},
										{
											"id": 146,
											"name": "level",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 368,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "level"
											},
											"defaultValue": "      level"
										},
										{
											"id": 153,
											"name": "logFile",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 375,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "logFile"
											},
											"defaultValue": "    logFile"
										},
										{
											"id": 154,
											"name": "out",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 376,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "out"
											},
											"defaultValue": "        out"
										},
										{
											"id": 152,
											"name": "prefix",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 374,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "prefix"
											},
											"defaultValue": "     prefix"
										},
										{
											"id": 149,
											"name": "warn",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 371,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "warn"
											},
											"defaultValue": "       warn"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												142,
												145,
												143,
												144,
												155,
												147,
												150,
												151,
												148,
												156,
												146,
												153,
												154,
												152,
												149
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 162,
							"character": 15
						}
					]
				},
				{
					"id": 111,
					"name": "color",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "shell color escape codes"
					},
					"children": [
						{
							"id": 114,
							"name": "blue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 134,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[36m\""
						},
						{
							"id": 116,
							"name": "bold",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 136,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[1m\""
						},
						{
							"id": 117,
							"name": "clear",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 137,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[0m\""
						},
						{
							"id": 115,
							"name": "green",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 135,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[32m\""
						},
						{
							"id": 112,
							"name": "red",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 132,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[31m\""
						},
						{
							"id": 113,
							"name": "yellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 133,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[33m\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								114,
								116,
								117,
								115,
								112,
								113
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 131,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 101,
					"name": "gLevels",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "map of valid reporting levels"
					},
					"children": [
						{
							"id": 102,
							"name": "__computed",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 105,
									"name": "desc",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "log.ts",
											"line": 111,
											"character": 48
										},
										{
											"fileName": "log.ts",
											"line": 112,
											"character": 48
										},
										{
											"fileName": "log.ts",
											"line": 113,
											"character": 48
										},
										{
											"fileName": "log.ts",
											"line": 114,
											"character": 48
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"ERROR\""
								},
								{
									"id": 103,
									"name": "importance",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "log.ts",
											"line": 111,
											"character": 27
										},
										{
											"fileName": "log.ts",
											"line": 112,
											"character": 27
										},
										{
											"fileName": "log.ts",
											"line": 113,
											"character": 27
										},
										{
											"fileName": "log.ts",
											"line": 114,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "3"
								},
								{
									"id": 104,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "log.ts",
											"line": 111,
											"character": 35
										},
										{
											"fileName": "log.ts",
											"line": 112,
											"character": 35
										},
										{
											"fileName": "log.ts",
											"line": 113,
											"character": 35
										},
										{
											"fileName": "log.ts",
											"line": 114,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"defaultValue": " ERROR"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										105,
										103,
										104
									]
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 111,
									"character": 11
								},
								{
									"fileName": "log.ts",
									"line": 112,
									"character": 10
								},
								{
									"fileName": "log.ts",
									"line": 113,
									"character": 10
								},
								{
									"fileName": "log.ts",
									"line": 114,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								102
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 110,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						93
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						97,
						100,
						98,
						99,
						107,
						110,
						108,
						106,
						109,
						118
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						119,
						138
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						111,
						101
					]
				}
			],
			"sources": [
				{
					"fileName": "log.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 241,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/node/hsNode/src/overview.ts",
			"comment": {
				"shortText": "# hsNode",
				"text": "Helpful Scripts functions that wrap some nodejs calls in Promise wrappers.\n[`[Github page]`](https://github.com/HelpfulScripts/hsNode)\n[`[Coverage Info]`](./data/src/hsNode/coverage/)\n___\n\n## Index of nodejs wrappers\n- &nbsp; {@link cpUtil child_processs} child process execution\n- &nbsp; {@link fsUtil file system} functions\n- &nbsp; {@link httpUtil http} web server functions\n\n## Index of other node support functions\n- &nbsp; {@link log log} logging support with per-module prefixes\n\n\n"
			},
			"sources": [
				{
					"fileName": "overview.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				10,
				157,
				240,
				92,
				241
			]
		}
	]
}